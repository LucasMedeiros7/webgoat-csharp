# .github/workflows/semgrep-csharp.yml
name: Semgrep (C#) — Community

on:
  pull_request:
    branches: [ "**" ]
  push:
    branches: [ "main", "master" ]
  workflow_dispatch: {}

jobs:
  semgrep_scan:
    name: semgrep/ci
    runs-on: ubuntu-latest

    # Você pode manter container: semgrep/semgrep, mas em geral
    # no Ubuntu-latest é mais estável usar o binário do próprio action.
    # Se preferir container, descomente abaixo:
    # container:
    #   image: semgrep/semgrep:latest

    permissions:
      security-events: write   # obrigatório para publicar SARIF
      contents: read
      actions: read
      pull-requests: write     # melhora anotações em PR

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # annotations mais precisas no PR

      # Opção A: usar CLI via Docker (100% community)
      - name: Run Semgrep (C# + Secrets)
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/src" \
            --workdir /src \
            semgrep/semgrep:latest \
            semgrep scan \
              --config p/csharp \
              --config p/secrets \
              --exclude-dir bin \
              --exclude-dir obj \
              --exclude-dir .git \
              --sarif --output semgrep-results.sarif
        # Se quiser apenas reportar (sem quebrar o job ao encontrar findings), ative:
        # continue-on-error: true

      - name: Upload SARIF to Advanced Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif
          category: semgrep-csharp
        if: always()

      - name: Save SARIF as artifact (opcional)
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-scan-results
          path: semgrep-results.sarif
        if: always()
